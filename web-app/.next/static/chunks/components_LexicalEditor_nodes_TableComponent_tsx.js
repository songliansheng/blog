"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["components_LexicalEditor_nodes_TableComponent_tsx"],{

/***/ "./node_modules/@lexical/react/LexicalNestedComposer.dev.js":
/*!******************************************************************!*\
  !*** ./node_modules/@lexical/react/LexicalNestedComposer.dev.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar LexicalCollaborationContext = __webpack_require__(/*! @lexical/react/LexicalCollaborationContext */ \"./node_modules/@lexical/react/LexicalCollaborationContext.js\");\nvar LexicalComposerContext = __webpack_require__(/*! @lexical/react/LexicalComposerContext */ \"./node_modules/@lexical/react/LexicalComposerContext.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction LexicalNestedComposer({\n  initialEditor,\n  children,\n  initialNodes,\n  initialTheme,\n  skipCollabChecks\n}) {\n  const wasCollabPreviouslyReadyRef = React.useRef(false);\n  const parentContext = React.useContext(LexicalComposerContext.LexicalComposerContext);\n\n  if (parentContext == null) {\n    {\n      throw Error(`Unexpected parent context null on a nested composer`);\n    }\n  }\n\n  const [parentEditor, {\n    getTheme: getParentTheme\n  }] = parentContext;\n  const composerContext = React.useMemo(() => {\n    const composerTheme = initialTheme || getParentTheme() || undefined;\n    const context = LexicalComposerContext.createLexicalComposerContext(parentContext, composerTheme);\n\n    if (composerTheme !== undefined) {\n      initialEditor._config.theme = composerTheme;\n    }\n\n    initialEditor._parentEditor = parentEditor;\n\n    if (!initialNodes) {\n      const parentNodes = initialEditor._nodes = new Map(parentEditor._nodes);\n\n      for (const [type, entry] of parentNodes) {\n        initialEditor._nodes.set(type, {\n          klass: entry.klass,\n          replace: entry.replace,\n          transforms: new Set()\n        });\n      }\n    } else {\n      for (const klass of initialNodes) {\n        const type = klass.getType();\n\n        initialEditor._nodes.set(type, {\n          klass,\n          replace: null,\n          transforms: new Set()\n        });\n      }\n    }\n\n    initialEditor._config.namespace = parentEditor._config.namespace;\n    return [initialEditor, context];\n  }, // We only do this for init\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []); // If collaboration is enabled, make sure we don't render the children until the collaboration subdocument is ready.\n\n  const {\n    isCollabActive,\n    yjsDocMap\n  } = LexicalCollaborationContext.useCollaborationContext();\n  const isCollabReady = skipCollabChecks || wasCollabPreviouslyReadyRef.current || yjsDocMap.has(initialEditor.getKey());\n  React.useEffect(() => {\n    if (isCollabReady) {\n      wasCollabPreviouslyReadyRef.current = true;\n    }\n  }, [isCollabReady]); // Update `isEditable` state of nested editor in response to the same change on parent editor.\n\n  React.useEffect(() => {\n    return parentEditor.registerEditableListener(editable => {\n      initialEditor.setEditable(editable);\n    });\n  }, [initialEditor, parentEditor]);\n  return /*#__PURE__*/React.createElement(LexicalComposerContext.LexicalComposerContext.Provider, {\n    value: composerContext\n  }, !isCollabActive || isCollabReady ? children : null);\n}\n\nexports.LexicalNestedComposer = LexicalNestedComposer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxleGljYWwvcmVhY3QvTGV4aWNhbE5lc3RlZENvbXBvc2VyLmRldi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDYTs7QUFFYixrQ0FBa0MsbUJBQU8sQ0FBQyxnSEFBNEM7QUFDdEYsNkJBQTZCLG1CQUFPLENBQUMsc0dBQXVDO0FBQzVFLFlBQVksbUJBQU8sQ0FBQyw0Q0FBTzs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRyxvQkFBb0I7O0FBRXZCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSw2QkFBNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BsZXhpY2FsL3JlYWN0L0xleGljYWxOZXN0ZWRDb21wb3Nlci5kZXYuanM/ODNkNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIExleGljYWxDb2xsYWJvcmF0aW9uQ29udGV4dCA9IHJlcXVpcmUoJ0BsZXhpY2FsL3JlYWN0L0xleGljYWxDb2xsYWJvcmF0aW9uQ29udGV4dCcpO1xudmFyIExleGljYWxDb21wb3NlckNvbnRleHQgPSByZXF1aXJlKCdAbGV4aWNhbC9yZWFjdC9MZXhpY2FsQ29tcG9zZXJDb250ZXh0Jyk7XG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5mdW5jdGlvbiBMZXhpY2FsTmVzdGVkQ29tcG9zZXIoe1xuICBpbml0aWFsRWRpdG9yLFxuICBjaGlsZHJlbixcbiAgaW5pdGlhbE5vZGVzLFxuICBpbml0aWFsVGhlbWUsXG4gIHNraXBDb2xsYWJDaGVja3Ncbn0pIHtcbiAgY29uc3Qgd2FzQ29sbGFiUHJldmlvdXNseVJlYWR5UmVmID0gUmVhY3QudXNlUmVmKGZhbHNlKTtcbiAgY29uc3QgcGFyZW50Q29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoTGV4aWNhbENvbXBvc2VyQ29udGV4dC5MZXhpY2FsQ29tcG9zZXJDb250ZXh0KTtcblxuICBpZiAocGFyZW50Q29udGV4dCA9PSBudWxsKSB7XG4gICAge1xuICAgICAgdGhyb3cgRXJyb3IoYFVuZXhwZWN0ZWQgcGFyZW50IGNvbnRleHQgbnVsbCBvbiBhIG5lc3RlZCBjb21wb3NlcmApO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IFtwYXJlbnRFZGl0b3IsIHtcbiAgICBnZXRUaGVtZTogZ2V0UGFyZW50VGhlbWVcbiAgfV0gPSBwYXJlbnRDb250ZXh0O1xuICBjb25zdCBjb21wb3NlckNvbnRleHQgPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCBjb21wb3NlclRoZW1lID0gaW5pdGlhbFRoZW1lIHx8IGdldFBhcmVudFRoZW1lKCkgfHwgdW5kZWZpbmVkO1xuICAgIGNvbnN0IGNvbnRleHQgPSBMZXhpY2FsQ29tcG9zZXJDb250ZXh0LmNyZWF0ZUxleGljYWxDb21wb3NlckNvbnRleHQocGFyZW50Q29udGV4dCwgY29tcG9zZXJUaGVtZSk7XG5cbiAgICBpZiAoY29tcG9zZXJUaGVtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpbml0aWFsRWRpdG9yLl9jb25maWcudGhlbWUgPSBjb21wb3NlclRoZW1lO1xuICAgIH1cblxuICAgIGluaXRpYWxFZGl0b3IuX3BhcmVudEVkaXRvciA9IHBhcmVudEVkaXRvcjtcblxuICAgIGlmICghaW5pdGlhbE5vZGVzKSB7XG4gICAgICBjb25zdCBwYXJlbnROb2RlcyA9IGluaXRpYWxFZGl0b3IuX25vZGVzID0gbmV3IE1hcChwYXJlbnRFZGl0b3IuX25vZGVzKTtcblxuICAgICAgZm9yIChjb25zdCBbdHlwZSwgZW50cnldIG9mIHBhcmVudE5vZGVzKSB7XG4gICAgICAgIGluaXRpYWxFZGl0b3IuX25vZGVzLnNldCh0eXBlLCB7XG4gICAgICAgICAga2xhc3M6IGVudHJ5LmtsYXNzLFxuICAgICAgICAgIHJlcGxhY2U6IGVudHJ5LnJlcGxhY2UsXG4gICAgICAgICAgdHJhbnNmb3JtczogbmV3IFNldCgpXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGNvbnN0IGtsYXNzIG9mIGluaXRpYWxOb2Rlcykge1xuICAgICAgICBjb25zdCB0eXBlID0ga2xhc3MuZ2V0VHlwZSgpO1xuXG4gICAgICAgIGluaXRpYWxFZGl0b3IuX25vZGVzLnNldCh0eXBlLCB7XG4gICAgICAgICAga2xhc3MsXG4gICAgICAgICAgcmVwbGFjZTogbnVsbCxcbiAgICAgICAgICB0cmFuc2Zvcm1zOiBuZXcgU2V0KClcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaW5pdGlhbEVkaXRvci5fY29uZmlnLm5hbWVzcGFjZSA9IHBhcmVudEVkaXRvci5fY29uZmlnLm5hbWVzcGFjZTtcbiAgICByZXR1cm4gW2luaXRpYWxFZGl0b3IsIGNvbnRleHRdO1xuICB9LCAvLyBXZSBvbmx5IGRvIHRoaXMgZm9yIGluaXRcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICBbXSk7IC8vIElmIGNvbGxhYm9yYXRpb24gaXMgZW5hYmxlZCwgbWFrZSBzdXJlIHdlIGRvbid0IHJlbmRlciB0aGUgY2hpbGRyZW4gdW50aWwgdGhlIGNvbGxhYm9yYXRpb24gc3ViZG9jdW1lbnQgaXMgcmVhZHkuXG5cbiAgY29uc3Qge1xuICAgIGlzQ29sbGFiQWN0aXZlLFxuICAgIHlqc0RvY01hcFxuICB9ID0gTGV4aWNhbENvbGxhYm9yYXRpb25Db250ZXh0LnVzZUNvbGxhYm9yYXRpb25Db250ZXh0KCk7XG4gIGNvbnN0IGlzQ29sbGFiUmVhZHkgPSBza2lwQ29sbGFiQ2hlY2tzIHx8IHdhc0NvbGxhYlByZXZpb3VzbHlSZWFkeVJlZi5jdXJyZW50IHx8IHlqc0RvY01hcC5oYXMoaW5pdGlhbEVkaXRvci5nZXRLZXkoKSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzQ29sbGFiUmVhZHkpIHtcbiAgICAgIHdhc0NvbGxhYlByZXZpb3VzbHlSZWFkeVJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICB9XG4gIH0sIFtpc0NvbGxhYlJlYWR5XSk7IC8vIFVwZGF0ZSBgaXNFZGl0YWJsZWAgc3RhdGUgb2YgbmVzdGVkIGVkaXRvciBpbiByZXNwb25zZSB0byB0aGUgc2FtZSBjaGFuZ2Ugb24gcGFyZW50IGVkaXRvci5cblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiBwYXJlbnRFZGl0b3IucmVnaXN0ZXJFZGl0YWJsZUxpc3RlbmVyKGVkaXRhYmxlID0+IHtcbiAgICAgIGluaXRpYWxFZGl0b3Iuc2V0RWRpdGFibGUoZWRpdGFibGUpO1xuICAgIH0pO1xuICB9LCBbaW5pdGlhbEVkaXRvciwgcGFyZW50RWRpdG9yXSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMZXhpY2FsQ29tcG9zZXJDb250ZXh0LkxleGljYWxDb21wb3NlckNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY29tcG9zZXJDb250ZXh0XG4gIH0sICFpc0NvbGxhYkFjdGl2ZSB8fCBpc0NvbGxhYlJlYWR5ID8gY2hpbGRyZW4gOiBudWxsKTtcbn1cblxuZXhwb3J0cy5MZXhpY2FsTmVzdGVkQ29tcG9zZXIgPSBMZXhpY2FsTmVzdGVkQ29tcG9zZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@lexical/react/LexicalNestedComposer.dev.js\n"));

/***/ }),

/***/ "./node_modules/@lexical/react/LexicalNestedComposer.js":
/*!**************************************************************!*\
  !*** ./node_modules/@lexical/react/LexicalNestedComposer.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst LexicalNestedComposer =  true ? __webpack_require__(/*! ./LexicalNestedComposer.dev.js */ \"./node_modules/@lexical/react/LexicalNestedComposer.dev.js\") : 0\nmodule.exports = LexicalNestedComposer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxleGljYWwvcmVhY3QvTGV4aWNhbE5lc3RlZENvbXBvc2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNZO0FBQ1osOEJBQThCLEtBQXNDLEdBQUcsbUJBQU8sQ0FBQyxrR0FBZ0MsSUFBSSxDQUEwQztBQUM3SiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGxleGljYWwvcmVhY3QvTGV4aWNhbE5lc3RlZENvbXBvc2VyLmpzP2ZkOWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCdcbmNvbnN0IExleGljYWxOZXN0ZWRDb21wb3NlciA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gcmVxdWlyZSgnLi9MZXhpY2FsTmVzdGVkQ29tcG9zZXIuZGV2LmpzJykgOiByZXF1aXJlKCcuL0xleGljYWxOZXN0ZWRDb21wb3Nlci5wcm9kLmpzJylcbm1vZHVsZS5leHBvcnRzID0gTGV4aWNhbE5lc3RlZENvbXBvc2VyOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@lexical/react/LexicalNestedComposer.js\n"));

/***/ }),

/***/ "./components/LexicalEditor/nodes/TableComponent.tsx":
/*!***********************************************************!*\
  !*** ./components/LexicalEditor/nodes/TableComponent.tsx ***!
  \***********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TableComponent; }\n/* harmony export */ });\n/* harmony import */ var _home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/asyncToGenerator.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/regenerator/index.js */ \"./node_modules/next/dist/compiled/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _lexical_clipboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @lexical/clipboard */ \"./node_modules/@lexical/clipboard/LexicalClipboard.js\");\n/* harmony import */ var _lexical_clipboard__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_lexical_clipboard__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _lexical_html__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @lexical/html */ \"./node_modules/@lexical/html/LexicalHtml.js\");\n/* harmony import */ var _lexical_html__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_lexical_html__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _lexical_react_LexicalComposerContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @lexical/react/LexicalComposerContext */ \"./node_modules/@lexical/react/LexicalComposerContext.js\");\n/* harmony import */ var _lexical_react_LexicalComposerContext__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_lexical_react_LexicalComposerContext__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _lexical_react_LexicalNestedComposer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @lexical/react/LexicalNestedComposer */ \"./node_modules/@lexical/react/LexicalNestedComposer.js\");\n/* harmony import */ var _lexical_react_LexicalNestedComposer__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_lexical_react_LexicalNestedComposer__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _lexical_react_useLexicalNodeSelection__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @lexical/react/useLexicalNodeSelection */ \"./node_modules/@lexical/react/useLexicalNodeSelection.js\");\n/* harmony import */ var _lexical_react_useLexicalNodeSelection__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_lexical_react_useLexicalNodeSelection__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _lexical_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @lexical/utils */ \"./node_modules/@lexical/utils/LexicalUtils.js\");\n/* harmony import */ var _lexical_utils__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_lexical_utils__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var lexical__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lexical */ \"./node_modules/lexical/Lexical.js\");\n/* harmony import */ var lexical__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lexical__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _shared_environment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../shared/environment */ \"./components/shared/environment.ts\");\n/* harmony import */ var _plugins_TablePlugin__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../plugins/TablePlugin */ \"./components/LexicalEditor/plugins/TablePlugin.tsx\");\n/* harmony import */ var _TableNode__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./TableNode */ \"./components/LexicalEditor/nodes/TableNode.tsx\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__);\n\n\n\n\n\nvar _jsxFileName = \"/home/songliansheng/projects/blog-ui/components/LexicalEditor/nodes/TableComponent.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar NO_CELLS = [];\n\nfunction $createSelectAll() {\n  var sel = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$createRangeSelection)();\n  sel.focus.set('root', (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getRoot)().getChildrenSize(), 'element');\n  return sel;\n}\n\nfunction createEmptyParagraphHTML(theme) {\n  return \"<p class=\\\"\".concat(theme.paragraph, \"\\\"><br></p>\");\n}\n\nfunction focusCell(tableElem, id) {\n  var cellElem = tableElem.querySelector(\"[data-id=\".concat(id, \"]\"));\n\n  if (cellElem == null) {\n    return;\n  }\n\n  cellElem.focus();\n}\n\nfunction isStartingResize(target) {\n  return target.nodeType === 1 && target.hasAttribute('data-table-resize');\n}\n\nfunction generateHTMLFromJSON(editorStateJSON, cellEditor) {\n  var editorState = cellEditor.parseEditorState(editorStateJSON);\n  var html = _TableNode__WEBPACK_IMPORTED_MODULE_16__.cellHTMLCache.get(editorStateJSON);\n\n  if (html === undefined) {\n    html = editorState.read(function () {\n      return (0,_lexical_html__WEBPACK_IMPORTED_MODULE_6__.$generateHtmlFromNodes)(cellEditor, null);\n    });\n    var textContent = editorState.read(function () {\n      return (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getRoot)().getTextContent();\n    });\n    _TableNode__WEBPACK_IMPORTED_MODULE_16__.cellHTMLCache.set(editorStateJSON, html);\n    _TableNode__WEBPACK_IMPORTED_MODULE_16__.cellTextContentCache.set(editorStateJSON, textContent);\n  }\n\n  return html;\n}\n\nfunction getCurrentDocument(editor) {\n  var rootElement = editor.getRootElement();\n  return rootElement !== null ? rootElement.ownerDocument : document;\n}\n\nfunction isCopy(keyCode, shiftKey, metaKey, ctrlKey) {\n  if (shiftKey) {\n    return false;\n  }\n\n  if (keyCode === 67) {\n    return _shared_environment__WEBPACK_IMPORTED_MODULE_14__.IS_APPLE ? metaKey : ctrlKey;\n  }\n\n  return false;\n}\n\nfunction isCut(keyCode, shiftKey, metaKey, ctrlKey) {\n  if (shiftKey) {\n    return false;\n  }\n\n  if (keyCode === 88) {\n    return _shared_environment__WEBPACK_IMPORTED_MODULE_14__.IS_APPLE ? metaKey : ctrlKey;\n  }\n\n  return false;\n}\n\nfunction isPaste(keyCode, shiftKey, metaKey, ctrlKey) {\n  if (shiftKey) {\n    return false;\n  }\n\n  if (keyCode === 86) {\n    return _shared_environment__WEBPACK_IMPORTED_MODULE_14__.IS_APPLE ? metaKey : ctrlKey;\n  }\n\n  return false;\n}\n\nfunction getCellID(domElement) {\n  var node = domElement;\n\n  while (node !== null) {\n    var possibleID = node.getAttribute('data-id');\n\n    if (possibleID != null) {\n      return possibleID;\n    }\n\n    node = node.parentElement;\n  }\n\n  return null;\n}\n\nfunction getTableCellWidth(domElement) {\n  var node = domElement;\n\n  while (node !== null) {\n    if (node.nodeName === 'TH' || node.nodeName === 'TD') {\n      return node.getBoundingClientRect().width;\n    }\n\n    node = node.parentElement;\n  }\n\n  return 0;\n}\n\nfunction $updateCells(rows, ids, cellCoordMap, cellEditor, updateTableNode, fn) {\n  var _iterator = _createForOfIteratorHelper(ids),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var id = _step.value;\n      var cell = getCell(rows, id, cellCoordMap);\n\n      if (cell !== null && cellEditor !== null) {\n        var editorState = cellEditor.parseEditorState(cell.json);\n        cellEditor._headless = true;\n        cellEditor.setEditorState(editorState);\n        cellEditor.update(fn, {\n          discrete: true\n        });\n        cellEditor._headless = false;\n        var newJSON = JSON.stringify(cellEditor.getEditorState());\n        updateTableNode(function (tableNode) {\n          var _ref = cellCoordMap.get(id),\n              _ref2 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ref, 2),\n              x = _ref2[0],\n              y = _ref2[1];\n\n          (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n          tableNode.updateCellJSON(x, y, newJSON);\n        });\n      }\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction isTargetOnPossibleUIControl(target) {\n  var node = target;\n\n  while (node !== null) {\n    var nodeName = node.nodeName;\n\n    if (nodeName === 'BUTTON' || nodeName === 'INPUT' || nodeName === 'TEXTAREA') {\n      return true;\n    }\n\n    node = node.parentElement;\n  }\n\n  return false;\n}\n\nfunction getSelectedRect(startID, endID, cellCoordMap) {\n  var startCoords = cellCoordMap.get(startID);\n  var endCoords = cellCoordMap.get(endID);\n\n  if (startCoords === undefined || endCoords === undefined) {\n    return null;\n  }\n\n  var startX = Math.min(startCoords[0], endCoords[0]);\n  var endX = Math.max(startCoords[0], endCoords[0]);\n  var startY = Math.min(startCoords[1], endCoords[1]);\n  var endY = Math.max(startCoords[1], endCoords[1]);\n  return {\n    endX: endX,\n    endY: endY,\n    startX: startX,\n    startY: startY\n  };\n}\n\nfunction getSelectedIDs(rows, startID, endID, cellCoordMap) {\n  var rect = getSelectedRect(startID, endID, cellCoordMap);\n\n  if (rect === null) {\n    return [];\n  }\n\n  var startX = rect.startX,\n      endY = rect.endY,\n      endX = rect.endX,\n      startY = rect.startY;\n  var ids = [];\n\n  for (var x = startX; x <= endX; x++) {\n    for (var y = startY; y <= endY; y++) {\n      ids.push(rows[y].cells[x].id);\n    }\n  }\n\n  return ids;\n}\n\nfunction extractCellsFromRows(rows, rect) {\n  var startX = rect.startX,\n      endY = rect.endY,\n      endX = rect.endX,\n      startY = rect.startY;\n  var newRows = [];\n\n  for (var y = startY; y <= endY; y++) {\n    var row = rows[y];\n    var newRow = (0,_TableNode__WEBPACK_IMPORTED_MODULE_16__.createRow)();\n\n    for (var x = startX; x <= endX; x++) {\n      var cellClone = _objectSpread({}, row.cells[x]);\n\n      cellClone.id = (0,_TableNode__WEBPACK_IMPORTED_MODULE_16__.createUID)();\n      newRow.cells.push(cellClone);\n    }\n\n    newRows.push(newRow);\n  }\n\n  return newRows;\n}\n\nfunction TableCellEditor(_ref3) {\n  _s();\n\n  var cellEditor = _ref3.cellEditor;\n\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_12__.useContext)(_plugins_TablePlugin__WEBPACK_IMPORTED_MODULE_15__.CellContext),\n      cellEditorConfig = _useContext.cellEditorConfig,\n      cellEditorPlugins = _useContext.cellEditorPlugins;\n\n  if (cellEditorPlugins === null || cellEditorConfig === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(_lexical_react_LexicalNestedComposer__WEBPACK_IMPORTED_MODULE_8__.LexicalNestedComposer, {\n    initialEditor: cellEditor,\n    initialTheme: cellEditorConfig.theme,\n    initialNodes: cellEditorConfig.nodes,\n    skipCollabChecks: true,\n    children: cellEditorPlugins\n  });\n}\n\n_s(TableCellEditor, \"vVBFoY4VzIojimUAd3Ql/coTXek=\");\n\n_c = TableCellEditor;\n\nfunction getCell(rows, cellID, cellCoordMap) {\n  var coords = cellCoordMap.get(cellID);\n\n  if (coords === undefined) {\n    return null;\n  }\n\n  var _coords = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(coords, 2),\n      x = _coords[0],\n      y = _coords[1];\n\n  var row = rows[y];\n  return row.cells[x];\n}\n\nfunction TableActionMenu(_ref4) {\n  _s2();\n\n  var cell = _ref4.cell,\n      rows = _ref4.rows,\n      cellCoordMap = _ref4.cellCoordMap,\n      menuElem = _ref4.menuElem,\n      updateCellsByID = _ref4.updateCellsByID,\n      onClose = _ref4.onClose,\n      updateTableNode = _ref4.updateTableNode,\n      setSortingOptions = _ref4.setSortingOptions,\n      sortingOptions = _ref4.sortingOptions;\n  var dropDownRef = (0,react__WEBPACK_IMPORTED_MODULE_12__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_12__.useEffect)(function () {\n    var dropdownElem = dropDownRef.current;\n\n    if (dropdownElem !== null) {\n      var rect = menuElem.getBoundingClientRect();\n      dropdownElem.style.top = \"\".concat(rect.y, \"px\");\n      dropdownElem.style.left = \"\".concat(rect.x, \"px\");\n    }\n  }, [menuElem]);\n  (0,react__WEBPACK_IMPORTED_MODULE_12__.useEffect)(function () {\n    var handleClickOutside = function handleClickOutside(event) {\n      var dropdownElem = dropDownRef.current;\n\n      if (dropdownElem !== null && !dropdownElem.contains(event.target)) {\n        event.stopPropagation();\n      }\n    };\n\n    window.addEventListener('click', handleClickOutside);\n    return function () {\n      return window.removeEventListener('click', handleClickOutside);\n    };\n  }, [onClose]);\n  var coords = cellCoordMap.get(cell.id);\n\n  if (coords === undefined) {\n    return null;\n  }\n\n  var _coords2 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(coords, 2),\n      x = _coords2[0],\n      y = _coords2[1];\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsxs)(\"div\", {\n      className: \"dropdown\",\n      ref: dropDownRef,\n      onPointerMove: function onPointerMove(e) {\n        e.stopPropagation();\n      },\n      onPointerDown: function onPointerDown(e) {\n        e.stopPropagation();\n      },\n      onPointerUp: function onPointerUp(e) {\n        e.stopPropagation();\n      },\n      onClick: function onClick(e) {\n        e.stopPropagation();\n      },\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateTableNode(function (tableNode) {\n            (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n            tableNode.updateCellType(x, y, cell.type === 'normal' ? 'header' : 'normal');\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: cell.type === 'normal' ? 'Make header' : 'Remove header'\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateCellsByID([cell.id], function () {\n            var root = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getRoot)();\n            root.clear();\n            root.append((0,lexical__WEBPACK_IMPORTED_MODULE_11__.$createParagraphNode)());\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: \"Clear cell\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"hr\", {}), cell.type === 'header' && y === 0 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.Fragment, {\n        children: [sortingOptions !== null && sortingOptions.x === x && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n          className: \"item\",\n          onClick: function onClick() {\n            setSortingOptions(null);\n            onClose();\n          },\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n            className: \"text\",\n            children: \"Remove sorting\"\n          })\n        }), (sortingOptions === null || sortingOptions.x !== x || sortingOptions.type === 'descending') && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n          className: \"item\",\n          onClick: function onClick() {\n            setSortingOptions({\n              type: 'ascending',\n              x: x\n            });\n            onClose();\n          },\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n            className: \"text\",\n            children: \"Sort ascending\"\n          })\n        }), (sortingOptions === null || sortingOptions.x !== x || sortingOptions.type === 'ascending') && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n          className: \"item\",\n          onClick: function onClick() {\n            setSortingOptions({\n              type: 'descending',\n              x: x\n            });\n            onClose();\n          },\n          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n            className: \"text\",\n            children: \"Sort descending\"\n          })\n        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"hr\", {})]\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateTableNode(function (tableNode) {\n            (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n            tableNode.insertRowAt(y);\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: \"Insert row above\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateTableNode(function (tableNode) {\n            (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n            tableNode.insertRowAt(y + 1);\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: \"Insert row below\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"hr\", {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateTableNode(function (tableNode) {\n            (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n            tableNode.insertColumnAt(x);\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: \"Insert column left\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateTableNode(function (tableNode) {\n            (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n            tableNode.insertColumnAt(x + 1);\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: \"Insert column right\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"hr\", {}), rows[0].cells.length !== 1 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateTableNode(function (tableNode) {\n            (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n            tableNode.deleteColumnAt(x);\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: \"Delete column\"\n        })\n      }), rows.length !== 1 && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateTableNode(function (tableNode) {\n            (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n            tableNode.deleteRowAt(y);\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: \"Delete row\"\n        })\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: \"item\",\n        onClick: function onClick() {\n          updateTableNode(function (tableNode) {\n            (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n            tableNode.selectNext();\n            tableNode.remove();\n          });\n          onClose();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"span\", {\n          className: \"text\",\n          children: \"Delete table\"\n        })\n      })]\n    })\n  );\n}\n\n_s2(TableActionMenu, \"WaViSY3KSqR6IXk3ZFTwt9SmYC4=\");\n\n_c2 = TableActionMenu;\n\nfunction TableCell(_ref5) {\n  _s3();\n\n  var cell = _ref5.cell,\n      cellCoordMap = _ref5.cellCoordMap,\n      cellEditor = _ref5.cellEditor,\n      isEditing = _ref5.isEditing,\n      isSelected = _ref5.isSelected,\n      isPrimarySelected = _ref5.isPrimarySelected,\n      theme = _ref5.theme,\n      updateCellsByID = _ref5.updateCellsByID,\n      updateTableNode = _ref5.updateTableNode,\n      rows = _ref5.rows,\n      setSortingOptions = _ref5.setSortingOptions,\n      sortingOptions = _ref5.sortingOptions;\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_12__.useState)(false),\n      showMenu = _useState[0],\n      setShowMenu = _useState[1];\n\n  var menuRootRef = (0,react__WEBPACK_IMPORTED_MODULE_12__.useRef)(null);\n  var isHeader = cell.type !== 'normal';\n  var editorStateJSON = cell.json;\n  var CellComponent = isHeader ? 'th' : 'td';\n  var cellWidth = cell.width;\n  var menuElem = menuRootRef.current;\n  var coords = cellCoordMap.get(cell.id);\n  var isSorted = sortingOptions !== null && coords !== undefined && coords[0] === sortingOptions.x && coords[1] === 0;\n  (0,react__WEBPACK_IMPORTED_MODULE_12__.useEffect)(function () {\n    if (isEditing || !isPrimarySelected) {\n      setShowMenu(false);\n    }\n  }, [isEditing, isPrimarySelected]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsxs)(CellComponent, {\n    className: \"\".concat(theme.tableCell, \" \").concat(isHeader ? theme.tableCellHeader : '', \" \").concat(isSelected ? theme.tableCellSelected : ''),\n    \"data-id\": cell.id,\n    tabIndex: -1,\n    style: {\n      width: cellWidth !== null ? cellWidth : undefined\n    },\n    children: [isPrimarySelected && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"div\", {\n      className: \"\".concat(theme.tableCellPrimarySelected, \" \").concat(isEditing ? theme.tableCellEditing : '')\n    }), isPrimarySelected && isEditing ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(TableCellEditor, {\n      cellEditor: cellEditor\n    }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.Fragment, {\n      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"div\", {\n        style: {\n          position: 'relative',\n          zIndex: 3\n        },\n        dangerouslySetInnerHTML: {\n          __html: editorStateJSON === '' ? createEmptyParagraphHTML(theme) : generateHTMLFromJSON(editorStateJSON, cellEditor)\n        }\n      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"div\", {\n        className: theme.tableCellResizer,\n        \"data-table-resize\": \"true\"\n      })]\n    }), isPrimarySelected && !isEditing && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"div\", {\n      className: theme.tableCellActionButtonContainer,\n      ref: menuRootRef,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n        className: theme.tableCellActionButton,\n        onClick: function onClick(e) {\n          setShowMenu(!showMenu);\n          e.stopPropagation();\n        },\n        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"i\", {\n          className: \"chevron-down\"\n        })\n      })\n    }), showMenu && menuElem !== null && /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_13__.createPortal)( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(TableActionMenu, {\n      cell: cell,\n      menuElem: menuElem,\n      updateCellsByID: updateCellsByID,\n      onClose: function onClose() {\n        return setShowMenu(false);\n      },\n      updateTableNode: updateTableNode,\n      cellCoordMap: cellCoordMap,\n      rows: rows,\n      setSortingOptions: setSortingOptions,\n      sortingOptions: sortingOptions\n    }), document.body), isSorted && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"div\", {\n      className: theme.tableCellSortedIndicator\n    })]\n  });\n}\n\n_s3(TableCell, \"DDnzoHzHrrQuWTz3jHILSHNi7UQ=\");\n\n_c3 = TableCell;\nfunction TableComponent(_ref6) {\n  _s4();\n\n  var _this = this;\n\n  var nodeKey = _ref6.nodeKey,\n      rawRows = _ref6.rows,\n      theme = _ref6.theme;\n\n  var _useLexicalNodeSelect = (0,_lexical_react_useLexicalNodeSelection__WEBPACK_IMPORTED_MODULE_9__.useLexicalNodeSelection)(nodeKey),\n      _useLexicalNodeSelect2 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_useLexicalNodeSelect, 3),\n      isSelected = _useLexicalNodeSelect2[0],\n      setSelected = _useLexicalNodeSelect2[1],\n      clearSelection = _useLexicalNodeSelect2[2];\n\n  var resizeMeasureRef = (0,react__WEBPACK_IMPORTED_MODULE_12__.useRef)({\n    point: 0,\n    size: 0\n  });\n\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_12__.useState)(null),\n      sortingOptions = _useState2[0],\n      setSortingOptions = _useState2[1];\n\n  var addRowsRef = (0,react__WEBPACK_IMPORTED_MODULE_12__.useRef)(null);\n  var lastCellIDRef = (0,react__WEBPACK_IMPORTED_MODULE_12__.useRef)(null);\n  var tableResizerRulerRef = (0,react__WEBPACK_IMPORTED_MODULE_12__.useRef)(null);\n\n  var _useContext2 = (0,react__WEBPACK_IMPORTED_MODULE_12__.useContext)(_plugins_TablePlugin__WEBPACK_IMPORTED_MODULE_15__.CellContext),\n      cellEditorConfig = _useContext2.cellEditorConfig;\n\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_12__.useState)(false),\n      isEditing = _useState3[0],\n      setIsEditing = _useState3[1];\n\n  var _useState4 = (0,react__WEBPACK_IMPORTED_MODULE_12__.useState)(false),\n      showAddColumns = _useState4[0],\n      setShowAddColumns = _useState4[1];\n\n  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_12__.useState)(false),\n      showAddRows = _useState5[0],\n      setShowAddRows = _useState5[1];\n\n  var _useLexicalComposerCo = (0,_lexical_react_LexicalComposerContext__WEBPACK_IMPORTED_MODULE_7__.useLexicalComposerContext)(),\n      _useLexicalComposerCo2 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_useLexicalComposerCo, 1),\n      editor = _useLexicalComposerCo2[0];\n\n  var mouseDownRef = (0,react__WEBPACK_IMPORTED_MODULE_12__.useRef)(false);\n\n  var _useState6 = (0,react__WEBPACK_IMPORTED_MODULE_12__.useState)(null),\n      resizingID = _useState6[0],\n      setResizingID = _useState6[1];\n\n  var tableRef = (0,react__WEBPACK_IMPORTED_MODULE_12__.useRef)(null);\n  var cellCoordMap = (0,react__WEBPACK_IMPORTED_MODULE_12__.useMemo)(function () {\n    var map = new Map();\n\n    for (var y = 0; y < rawRows.length; y++) {\n      var row = rawRows[y];\n      var cells = row.cells;\n\n      for (var x = 0; x < cells.length; x++) {\n        var cell = cells[x];\n        map.set(cell.id, [x, y]);\n      }\n    }\n\n    return map;\n  }, [rawRows]);\n  var rows = (0,react__WEBPACK_IMPORTED_MODULE_12__.useMemo)(function () {\n    if (sortingOptions === null) {\n      return rawRows;\n    }\n\n    var _rows = rawRows.slice(1);\n\n    _rows.sort(function (a, b) {\n      var aCells = a.cells;\n      var bCells = b.cells;\n      var x = sortingOptions.x;\n      var aContent = _TableNode__WEBPACK_IMPORTED_MODULE_16__.cellTextContentCache.get(aCells[x].json) || '';\n      var bContent = _TableNode__WEBPACK_IMPORTED_MODULE_16__.cellTextContentCache.get(bCells[x].json) || '';\n\n      if (aContent === '' || bContent === '') {\n        return 1;\n      }\n\n      if (sortingOptions.type === 'ascending') {\n        return aContent.localeCompare(bContent);\n      }\n\n      return bContent.localeCompare(aContent);\n    });\n\n    _rows.unshift(rawRows[0]);\n\n    return _rows;\n  }, [rawRows, sortingOptions]);\n\n  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_12__.useState)(null),\n      primarySelectedCellID = _useState7[0],\n      setPrimarySelectedCellID = _useState7[1];\n\n  var cellEditor = (0,react__WEBPACK_IMPORTED_MODULE_12__.useMemo)(function () {\n    if (cellEditorConfig === null) {\n      return null;\n    }\n\n    var _cellEditor = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.createEditor)({\n      namespace: cellEditorConfig.namespace,\n      nodes: cellEditorConfig.nodes,\n      onError: function onError(error) {\n        return cellEditorConfig.onError(error, _cellEditor);\n      },\n      theme: cellEditorConfig.theme\n    });\n\n    return _cellEditor;\n  }, [cellEditorConfig]);\n\n  var _useState8 = (0,react__WEBPACK_IMPORTED_MODULE_12__.useState)([]),\n      selectedCellIDs = _useState8[0],\n      setSelectedCellIDs = _useState8[1];\n\n  var selectedCellSet = (0,react__WEBPACK_IMPORTED_MODULE_12__.useMemo)(function () {\n    return new Set(selectedCellIDs);\n  }, [selectedCellIDs]);\n  (0,react__WEBPACK_IMPORTED_MODULE_12__.useEffect)(function () {\n    var tableElem = tableRef.current;\n\n    if (isSelected && document.activeElement === document.body && tableElem !== null) {\n      tableElem.focus();\n    }\n  }, [isSelected]);\n  var updateTableNode = (0,react__WEBPACK_IMPORTED_MODULE_12__.useCallback)(function (fn) {\n    editor.update(function () {\n      var tableNode = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getNodeByKey)(nodeKey);\n\n      if ((0,_TableNode__WEBPACK_IMPORTED_MODULE_16__.$isTableNode)(tableNode)) {\n        fn(tableNode);\n      }\n    });\n  }, [editor, nodeKey]);\n\n  var addColumns = function addColumns() {\n    updateTableNode(function (tableNode) {\n      (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n      tableNode.addColumns(1);\n    });\n  };\n\n  var addRows = function addRows() {\n    updateTableNode(function (tableNode) {\n      (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n      tableNode.addRows(1);\n    });\n  };\n\n  var modifySelectedCells = (0,react__WEBPACK_IMPORTED_MODULE_12__.useCallback)(function (x, y, extend) {\n    var id = rows[y].cells[x].id;\n    lastCellIDRef.current = id;\n\n    if (extend) {\n      var selectedIDs = getSelectedIDs(rows, primarySelectedCellID, id, cellCoordMap);\n      setSelectedCellIDs(selectedIDs);\n    } else {\n      setPrimarySelectedCellID(id);\n      setSelectedCellIDs(NO_CELLS);\n      focusCell(tableRef.current, id);\n    }\n  }, [cellCoordMap, primarySelectedCellID, rows]);\n  var saveEditorToJSON = (0,react__WEBPACK_IMPORTED_MODULE_12__.useCallback)(function () {\n    if (cellEditor !== null && primarySelectedCellID !== null) {\n      var json = JSON.stringify(cellEditor.getEditorState());\n      updateTableNode(function (tableNode) {\n        var coords = cellCoordMap.get(primarySelectedCellID);\n\n        if (coords === undefined) {\n          return;\n        }\n\n        (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n\n        var _coords3 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(coords, 2),\n            x = _coords3[0],\n            y = _coords3[1];\n\n        tableNode.updateCellJSON(x, y, json);\n      });\n    }\n  }, [cellCoordMap, cellEditor, primarySelectedCellID, updateTableNode]);\n  var selectTable = (0,react__WEBPACK_IMPORTED_MODULE_12__.useCallback)(function () {\n    setTimeout(function () {\n      var parentRootElement = editor.getRootElement();\n\n      if (parentRootElement !== null) {\n        var _window$getSelection;\n\n        parentRootElement.focus({\n          preventScroll: true\n        });\n        (_window$getSelection = window.getSelection()) === null || _window$getSelection === void 0 ? void 0 : _window$getSelection.removeAllRanges();\n      }\n    }, 20);\n  }, [editor]);\n  (0,react__WEBPACK_IMPORTED_MODULE_12__.useEffect)(function () {\n    var tableElem = tableRef.current;\n\n    if (tableElem === null) {\n      return;\n    }\n\n    var doc = getCurrentDocument(editor);\n\n    var isAtEdgeOfTable = function isAtEdgeOfTable(event) {\n      var x = event.clientX - tableRect.x;\n      var y = event.clientY - tableRect.y;\n      return x < 5 || y < 5;\n    };\n\n    var handlePointerDown = function handlePointerDown(event) {\n      var possibleID = getCellID(event.target);\n\n      if (possibleID !== null && editor.isEditable() && tableElem.contains(event.target)) {\n        if (isAtEdgeOfTable(event)) {\n          setSelected(true);\n          setPrimarySelectedCellID(null);\n          selectTable();\n          return;\n        }\n\n        setSelected(false);\n\n        if (isStartingResize(event.target)) {\n          setResizingID(possibleID);\n          tableElem.style.userSelect = 'none';\n          resizeMeasureRef.current = {\n            point: event.clientX,\n            size: getTableCellWidth(event.target)\n          };\n          return;\n        }\n\n        mouseDownRef.current = true;\n\n        if (primarySelectedCellID !== possibleID) {\n          if (isEditing) {\n            saveEditorToJSON();\n          }\n\n          setPrimarySelectedCellID(possibleID);\n          setIsEditing(false);\n          lastCellIDRef.current = possibleID;\n        } else {\n          lastCellIDRef.current = null;\n        }\n\n        setSelectedCellIDs(NO_CELLS);\n      } else if (primarySelectedCellID !== null && !isTargetOnPossibleUIControl(event.target)) {\n        setSelected(false);\n        mouseDownRef.current = false;\n\n        if (isEditing) {\n          saveEditorToJSON();\n        }\n\n        setPrimarySelectedCellID(null);\n        setSelectedCellIDs(NO_CELLS);\n        setIsEditing(false);\n        lastCellIDRef.current = null;\n      }\n    };\n\n    var tableRect = tableElem.getBoundingClientRect();\n\n    var handlePointerMove = function handlePointerMove(event) {\n      if (resizingID !== null) {\n        var tableResizerRulerElem = tableResizerRulerRef.current;\n\n        if (tableResizerRulerElem !== null) {\n          var _resizeMeasureRef$cur = resizeMeasureRef.current,\n              size = _resizeMeasureRef$cur.size,\n              point = _resizeMeasureRef$cur.point;\n          var diff = event.clientX - point;\n          var newWidth = size + diff;\n          var x = event.clientX - tableRect.x;\n\n          if (x < 10) {\n            x = 10;\n          } else if (x > tableRect.width - 10) {\n            x = tableRect.width - 10;\n          } else if (newWidth < 20) {\n            x = point - size + 20 - tableRect.x;\n          }\n\n          tableResizerRulerElem.style.left = \"\".concat(x, \"px\");\n        }\n\n        return;\n      }\n\n      if (!isEditing) {\n        var clientX = event.clientX,\n            clientY = event.clientY;\n        var width = tableRect.width,\n            _x = tableRect.x,\n            y = tableRect.y,\n            height = tableRect.height;\n        var isOnRightEdge = clientX > _x + width * 0.9 && clientX < _x + width + 40 && !mouseDownRef.current;\n        setShowAddColumns(isOnRightEdge);\n        var isOnBottomEdge = event.target === addRowsRef.current || clientY > y + height * 0.85 && clientY < y + height + 5 && !mouseDownRef.current;\n        setShowAddRows(isOnBottomEdge);\n      }\n\n      if (isEditing || !mouseDownRef.current || primarySelectedCellID === null) {\n        return;\n      }\n\n      var possibleID = getCellID(event.target);\n\n      if (possibleID !== null && possibleID !== lastCellIDRef.current) {\n        if (selectedCellIDs.length === 0) {\n          tableElem.style.userSelect = 'none';\n        }\n\n        var selectedIDs = getSelectedIDs(rows, primarySelectedCellID, possibleID, cellCoordMap);\n\n        if (selectedIDs.length === 1) {\n          setSelectedCellIDs(NO_CELLS);\n        } else {\n          setSelectedCellIDs(selectedIDs);\n        }\n\n        lastCellIDRef.current = possibleID;\n      }\n    };\n\n    var handlePointerUp = function handlePointerUp(event) {\n      if (resizingID !== null) {\n        var _resizeMeasureRef$cur2 = resizeMeasureRef.current,\n            size = _resizeMeasureRef$cur2.size,\n            point = _resizeMeasureRef$cur2.point;\n        var diff = event.clientX - point;\n        var newWidth = size + diff;\n\n        if (newWidth < 10) {\n          newWidth = 10;\n        }\n\n        updateTableNode(function (tableNode) {\n          var _ref7 = cellCoordMap.get(resizingID),\n              _ref8 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ref7, 1),\n              x = _ref8[0];\n\n          (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n          tableNode.updateColumnWidth(x, newWidth);\n        });\n        setResizingID(null);\n      }\n\n      if (tableElem !== null && selectedCellIDs.length > 1 && mouseDownRef.current) {\n        var _window$getSelection2;\n\n        tableElem.style.userSelect = 'text';\n        (_window$getSelection2 = window.getSelection()) === null || _window$getSelection2 === void 0 ? void 0 : _window$getSelection2.removeAllRanges();\n      }\n\n      mouseDownRef.current = false;\n    };\n\n    doc.addEventListener('pointerdown', handlePointerDown);\n    doc.addEventListener('pointermove', handlePointerMove);\n    doc.addEventListener('pointerup', handlePointerUp);\n    return function () {\n      doc.removeEventListener('pointerdown', handlePointerDown);\n      doc.removeEventListener('pointermove', handlePointerMove);\n      doc.removeEventListener('pointerup', handlePointerUp);\n    };\n  }, [cellEditor, editor, isEditing, rows, saveEditorToJSON, primarySelectedCellID, selectedCellSet, selectedCellIDs, cellCoordMap, resizingID, updateTableNode, setSelected, selectTable]);\n  (0,react__WEBPACK_IMPORTED_MODULE_12__.useEffect)(function () {\n    if (!isEditing && primarySelectedCellID !== null) {\n      var doc = getCurrentDocument(editor);\n\n      var loadContentIntoCell = function loadContentIntoCell(cell) {\n        if (cell !== null && cellEditor !== null) {\n          var editorStateJSON = cell.json;\n          var editorState = cellEditor.parseEditorState(editorStateJSON);\n          cellEditor.setEditorState(editorState);\n        }\n      };\n\n      var handleDblClick = function handleDblClick(event) {\n        var possibleID = getCellID(event.target);\n\n        if (possibleID === primarySelectedCellID && editor.isEditable()) {\n          var cell = getCell(rows, possibleID, cellCoordMap);\n          loadContentIntoCell(cell);\n          setIsEditing(true);\n          setSelectedCellIDs(NO_CELLS);\n        }\n      };\n\n      var handleKeyDown = function handleKeyDown(event) {\n        // Ignore arrow keys, escape or tab\n        var keyCode = event.keyCode;\n\n        if (keyCode === 16 || keyCode === 27 || keyCode === 9 || keyCode === 37 || keyCode === 38 || keyCode === 39 || keyCode === 40 || keyCode === 8 || keyCode === 46 || !editor.isEditable()) {\n          return;\n        }\n\n        if (keyCode === 13) {\n          event.preventDefault();\n        }\n\n        if (!isEditing && primarySelectedCellID !== null && editor.getEditorState().read(function () {\n          return (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)() === null;\n        }) && event.target.contentEditable !== 'true') {\n          if (isCopy(keyCode, event.shiftKey, event.metaKey, event.ctrlKey)) {\n            editor.dispatchCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.COPY_COMMAND, event);\n            return;\n          }\n\n          if (isCut(keyCode, event.shiftKey, event.metaKey, event.ctrlKey)) {\n            editor.dispatchCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.CUT_COMMAND, event);\n            return;\n          }\n\n          if (isPaste(keyCode, event.shiftKey, event.metaKey, event.ctrlKey)) {\n            editor.dispatchCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.PASTE_COMMAND, event);\n            return;\n          }\n        }\n\n        if (event.metaKey || event.ctrlKey || event.altKey) {\n          return;\n        }\n\n        var cell = getCell(rows, primarySelectedCellID, cellCoordMap);\n        loadContentIntoCell(cell);\n        setIsEditing(true);\n        setSelectedCellIDs(NO_CELLS);\n      };\n\n      doc.addEventListener('dblclick', handleDblClick);\n      doc.addEventListener('keydown', handleKeyDown);\n      return function () {\n        doc.removeEventListener('dblclick', handleDblClick);\n        doc.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [cellEditor, editor, isEditing, rows, primarySelectedCellID, cellCoordMap]);\n  var updateCellsByID = (0,react__WEBPACK_IMPORTED_MODULE_12__.useCallback)(function (ids, fn) {\n    $updateCells(rows, ids, cellCoordMap, cellEditor, updateTableNode, fn);\n  }, [cellCoordMap, cellEditor, rows, updateTableNode]);\n  var clearCellsCommand = (0,react__WEBPACK_IMPORTED_MODULE_12__.useCallback)(function () {\n    if (primarySelectedCellID !== null && !isEditing) {\n      updateCellsByID([primarySelectedCellID].concat((0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(selectedCellIDs)), function () {\n        var root = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getRoot)();\n        root.clear();\n        root.append((0,lexical__WEBPACK_IMPORTED_MODULE_11__.$createParagraphNode)());\n      });\n      return true;\n    } else if (isSelected) {\n      updateTableNode(function (tableNode) {\n        (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n        tableNode.selectNext();\n        tableNode.remove();\n      });\n    }\n\n    return false;\n  }, [isEditing, isSelected, primarySelectedCellID, selectedCellIDs, updateCellsByID, updateTableNode]);\n  (0,react__WEBPACK_IMPORTED_MODULE_12__.useEffect)(function () {\n    var tableElem = tableRef.current;\n\n    if (tableElem === null) {\n      return;\n    }\n\n    var copyDataToClipboard = function copyDataToClipboard(event, htmlString, lexicalString, plainTextString) {\n      var clipboardData = event instanceof KeyboardEvent ? null : event.clipboardData;\n      event.preventDefault();\n\n      if (clipboardData != null) {\n        clipboardData.setData('text/html', htmlString);\n        clipboardData.setData('text/plain', plainTextString);\n        clipboardData.setData('application/x-lexical-editor', lexicalString);\n      } else {\n        var clipboard = navigator.clipboard;\n\n        if (clipboard != null) {\n          // Most browsers only support a single item in the clipboard at one time.\n          // So we optimize by only putting in HTML.\n          var data = [new ClipboardItem({\n            'text/html': new Blob([htmlString], {\n              type: 'text/html'\n            })\n          })];\n          clipboard.write(data);\n        }\n      }\n    };\n\n    var getTypeFromObject = /*#__PURE__*/function () {\n      var _ref9 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee(clipboardData, type) {\n        return _home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(clipboardData instanceof DataTransfer)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.t0 = clipboardData.getData(type);\n                _context.next = 15;\n                break;\n\n              case 5:\n                if (!(clipboardData instanceof ClipboardItem)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 8;\n                return clipboardData.getType(type);\n\n              case 8:\n                _context.next = 10;\n                return _context.sent.text();\n\n              case 10:\n                _context.t1 = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 13:\n                _context.t1 = '';\n\n              case 14:\n                _context.t0 = _context.t1;\n\n              case 15:\n                return _context.abrupt(\"return\", _context.t0);\n\n              case 18:\n                _context.prev = 18;\n                _context.t2 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", '');\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 18]]);\n      }));\n\n      return function getTypeFromObject(_x2, _x3) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    var pasteContent = /*#__PURE__*/function () {\n      var _ref10 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])( /*#__PURE__*/_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2(event) {\n        var clipboardData, items, lexicalString, payload, htmlString, parser, dom, possibleTableElement, pasteRows, text;\n        return _home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                clipboardData = (event instanceof InputEvent ? null : event.clipboardData) || null;\n\n                if (!(primarySelectedCellID !== null && cellEditor !== null)) {\n                  _context2.next = 63;\n                  break;\n                }\n\n                event.preventDefault();\n\n                if (!(clipboardData === null)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.prev = 4;\n                _context2.next = 7;\n                return navigator.clipboard.read();\n\n              case 7:\n                items = _context2.sent;\n                clipboardData = items[0];\n                _context2.next = 13;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](4);\n\n              case 13:\n                if (!(clipboardData !== null)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _context2.next = 16;\n                return getTypeFromObject(clipboardData, 'application/x-lexical-editor');\n\n              case 16:\n                _context2.t1 = _context2.sent;\n                _context2.next = 20;\n                break;\n\n              case 19:\n                _context2.t1 = '';\n\n              case 20:\n                lexicalString = _context2.t1;\n\n                if (!lexicalString) {\n                  _context2.next = 31;\n                  break;\n                }\n\n                _context2.prev = 22;\n                payload = JSON.parse(lexicalString);\n\n                if (!(payload.namespace === editor._config.namespace && Array.isArray(payload.nodes))) {\n                  _context2.next = 27;\n                  break;\n                }\n\n                $updateCells(rows, [primarySelectedCellID], cellCoordMap, cellEditor, updateTableNode, function () {\n                  var root = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getRoot)();\n                  root.clear();\n                  root.append((0,lexical__WEBPACK_IMPORTED_MODULE_11__.$createParagraphNode)());\n                  root.selectEnd();\n                  var nodes = (0,_lexical_clipboard__WEBPACK_IMPORTED_MODULE_5__.$generateNodesFromSerializedNodes)(payload.nodes);\n                  var sel = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n                  if ((0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isRangeSelection)(sel)) {\n                    (0,_lexical_clipboard__WEBPACK_IMPORTED_MODULE_5__.$insertGeneratedNodes)(cellEditor, nodes, sel);\n                  }\n                });\n                return _context2.abrupt(\"return\");\n\n              case 27:\n                _context2.next = 31;\n                break;\n\n              case 29:\n                _context2.prev = 29;\n                _context2.t2 = _context2[\"catch\"](22);\n\n              case 31:\n                if (!(clipboardData !== null)) {\n                  _context2.next = 37;\n                  break;\n                }\n\n                _context2.next = 34;\n                return getTypeFromObject(clipboardData, 'text/html');\n\n              case 34:\n                _context2.t3 = _context2.sent;\n                _context2.next = 38;\n                break;\n\n              case 37:\n                _context2.t3 = '';\n\n              case 38:\n                htmlString = _context2.t3;\n\n                if (!htmlString) {\n                  _context2.next = 54;\n                  break;\n                }\n\n                _context2.prev = 40;\n                parser = new DOMParser();\n                dom = parser.parseFromString(htmlString, 'text/html');\n                possibleTableElement = dom.querySelector('table');\n\n                if (!(possibleTableElement != null)) {\n                  _context2.next = 48;\n                  break;\n                }\n\n                pasteRows = (0,_TableNode__WEBPACK_IMPORTED_MODULE_16__.extractRowsFromHTML)(possibleTableElement);\n                updateTableNode(function (tableNode) {\n                  var _ref11 = cellCoordMap.get(primarySelectedCellID),\n                      _ref12 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ref11, 2),\n                      x = _ref12[0],\n                      y = _ref12[1];\n\n                  (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$addUpdateTag)('history-push');\n                  tableNode.mergeRows(x, y, pasteRows);\n                });\n                return _context2.abrupt(\"return\");\n\n              case 48:\n                $updateCells(rows, [primarySelectedCellID], cellCoordMap, cellEditor, updateTableNode, function () {\n                  var root = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getRoot)();\n                  root.clear();\n                  root.append((0,lexical__WEBPACK_IMPORTED_MODULE_11__.$createParagraphNode)());\n                  root.selectEnd();\n                  var nodes = (0,_lexical_html__WEBPACK_IMPORTED_MODULE_6__.$generateNodesFromDOM)(editor, dom);\n                  var sel = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n                  if ((0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isRangeSelection)(sel)) {\n                    (0,_lexical_clipboard__WEBPACK_IMPORTED_MODULE_5__.$insertGeneratedNodes)(cellEditor, nodes, sel);\n                  }\n                });\n                return _context2.abrupt(\"return\");\n\n              case 52:\n                _context2.prev = 52;\n                _context2.t4 = _context2[\"catch\"](40);\n\n              case 54:\n                if (!(clipboardData !== null)) {\n                  _context2.next = 60;\n                  break;\n                }\n\n                _context2.next = 57;\n                return getTypeFromObject(clipboardData, 'text/plain');\n\n              case 57:\n                _context2.t5 = _context2.sent;\n                _context2.next = 61;\n                break;\n\n              case 60:\n                _context2.t5 = '';\n\n              case 61:\n                text = _context2.t5;\n\n                if (text != null) {\n                  $updateCells(rows, [primarySelectedCellID], cellCoordMap, cellEditor, updateTableNode, function () {\n                    var root = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getRoot)();\n                    root.clear();\n                    root.selectEnd();\n                    var sel = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n                    if (sel !== null) {\n                      sel.insertRawText(text);\n                    }\n                  });\n                }\n\n              case 63:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 11], [22, 29], [40, 52]]);\n      }));\n\n      return function pasteContent(_x4) {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n\n    var copyPrimaryCell = function copyPrimaryCell(event) {\n      if (primarySelectedCellID !== null && cellEditor !== null) {\n        var cell = getCell(rows, primarySelectedCellID, cellCoordMap);\n        var json = cell.json;\n        var htmlString = _TableNode__WEBPACK_IMPORTED_MODULE_16__.cellHTMLCache.get(json) || null;\n\n        if (htmlString === null) {\n          return;\n        }\n\n        var editorState = cellEditor.parseEditorState(json);\n        var plainTextString = editorState.read(function () {\n          return (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getRoot)().getTextContent();\n        });\n        var lexicalString = editorState.read(function () {\n          return JSON.stringify((0,_lexical_clipboard__WEBPACK_IMPORTED_MODULE_5__.$generateJSONFromSelectedNodes)(cellEditor, null));\n        });\n        copyDataToClipboard(event, htmlString, lexicalString, plainTextString);\n      }\n    };\n\n    var copyCellRange = function copyCellRange(event) {\n      var lastCellID = lastCellIDRef.current;\n\n      if (primarySelectedCellID !== null && cellEditor !== null && lastCellID !== null) {\n        var rect = getSelectedRect(primarySelectedCellID, lastCellID, cellCoordMap);\n\n        if (rect === null) {\n          return;\n        }\n\n        var dom = (0,_TableNode__WEBPACK_IMPORTED_MODULE_16__.exportTableCellsToHTML)(rows, rect);\n        var htmlString = dom.outerHTML;\n        var plainTextString = dom.outerText;\n        var tableNodeJSON = editor.getEditorState().read(function () {\n          var tableNode = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getNodeByKey)(nodeKey);\n          return tableNode.exportJSON();\n        });\n        tableNodeJSON.rows = extractCellsFromRows(rows, rect);\n        var lexicalJSON = {\n          namespace: cellEditor._config.namespace,\n          nodes: [tableNodeJSON]\n        };\n        var lexicalString = JSON.stringify(lexicalJSON);\n        copyDataToClipboard(event, htmlString, lexicalString, plainTextString);\n      }\n    };\n\n    var handlePaste = function handlePaste(event, activeEditor) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (primarySelectedCellID !== null && !isEditing && selection === null && activeEditor === editor) {\n        pasteContent(event);\n        mouseDownRef.current = false;\n        setSelectedCellIDs(NO_CELLS);\n        return true;\n      }\n\n      return false;\n    };\n\n    var handleCopy = function handleCopy(event, activeEditor) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (primarySelectedCellID !== null && !isEditing && selection === null && activeEditor === editor) {\n        if (selectedCellIDs.length === 0) {\n          copyPrimaryCell(event);\n        } else {\n          copyCellRange(event);\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    return (0,_lexical_utils__WEBPACK_IMPORTED_MODULE_10__.mergeRegister)(editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.CLICK_COMMAND, function (payload) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if ((0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isNodeSelection)(selection)) {\n        return true;\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.PASTE_COMMAND, handlePaste, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.COPY_COMMAND, handleCopy, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.CUT_COMMAND, function (event, activeEditor) {\n      if (handleCopy(event, activeEditor)) {\n        clearCellsCommand();\n        return true;\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_BACKSPACE_COMMAND, clearCellsCommand, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_DELETE_COMMAND, clearCellsCommand, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.FORMAT_TEXT_COMMAND, function (payload) {\n      if (primarySelectedCellID !== null && !isEditing) {\n        $updateCells(rows, [primarySelectedCellID].concat((0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(selectedCellIDs)), cellCoordMap, cellEditor, updateTableNode, function () {\n          var sel = $createSelectAll();\n          sel.formatText(payload);\n        });\n        return true;\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_ENTER_COMMAND, function (event, targetEditor) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (primarySelectedCellID === null && !isEditing && (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isNodeSelection)(selection) && selection.has(nodeKey) && selection.getNodes().length === 1 && targetEditor === editor) {\n        var firstCellID = rows[0].cells[0].id;\n        setPrimarySelectedCellID(firstCellID);\n        focusCell(tableElem, firstCellID);\n        event.preventDefault();\n        event.stopPropagation();\n        clearSelection();\n        return true;\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_TAB_COMMAND, function (event) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (!isEditing && selection === null && primarySelectedCellID !== null) {\n        var isBackward = event.shiftKey;\n\n        var _ref13 = cellCoordMap.get(primarySelectedCellID),\n            _ref14 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ref13, 2),\n            x = _ref14[0],\n            y = _ref14[1];\n\n        event.preventDefault();\n        var nextX = null;\n        var nextY = null;\n\n        if (x === 0 && isBackward) {\n          if (y !== 0) {\n            nextY = y - 1;\n            nextX = rows[nextY].cells.length - 1;\n          }\n        } else if (x === rows[y].cells.length - 1 && !isBackward) {\n          if (y !== rows.length - 1) {\n            nextY = y + 1;\n            nextX = 0;\n          }\n        } else if (!isBackward) {\n          nextX = x + 1;\n          nextY = y;\n        } else {\n          nextX = x - 1;\n          nextY = y;\n        }\n\n        if (nextX !== null && nextY !== null) {\n          modifySelectedCells(nextX, nextY, false);\n          return true;\n        }\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_ARROW_UP_COMMAND, function (event, targetEditor) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (!isEditing && selection === null) {\n        var extend = event.shiftKey;\n        var cellID = extend ? lastCellIDRef.current || primarySelectedCellID : primarySelectedCellID;\n\n        if (cellID !== null) {\n          var _ref15 = cellCoordMap.get(cellID),\n              _ref16 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ref15, 2),\n              x = _ref16[0],\n              y = _ref16[1];\n\n          if (y !== 0) {\n            modifySelectedCells(x, y - 1, extend);\n            return true;\n          }\n        }\n      }\n\n      if (!(0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isRangeSelection)(selection) || targetEditor !== cellEditor) {\n        return false;\n      }\n\n      if (selection.isCollapsed() && selection.anchor.getNode().getTopLevelElementOrThrow().getPreviousSibling() === null) {\n        event.preventDefault();\n        return true;\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_ARROW_DOWN_COMMAND, function (event, targetEditor) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (!isEditing && selection === null) {\n        var extend = event.shiftKey;\n        var cellID = extend ? lastCellIDRef.current || primarySelectedCellID : primarySelectedCellID;\n\n        if (cellID !== null) {\n          var _ref17 = cellCoordMap.get(cellID),\n              _ref18 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ref17, 2),\n              x = _ref18[0],\n              y = _ref18[1];\n\n          if (y !== rows.length - 1) {\n            modifySelectedCells(x, y + 1, extend);\n            return true;\n          }\n        }\n      }\n\n      if (!(0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isRangeSelection)(selection) || targetEditor !== cellEditor) {\n        return false;\n      }\n\n      if (selection.isCollapsed() && selection.anchor.getNode().getTopLevelElementOrThrow().getNextSibling() === null) {\n        event.preventDefault();\n        return true;\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_ARROW_LEFT_COMMAND, function (event, targetEditor) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (!isEditing && selection === null) {\n        var extend = event.shiftKey;\n        var cellID = extend ? lastCellIDRef.current || primarySelectedCellID : primarySelectedCellID;\n\n        if (cellID !== null) {\n          var _ref19 = cellCoordMap.get(cellID),\n              _ref20 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ref19, 2),\n              x = _ref20[0],\n              y = _ref20[1];\n\n          if (x !== 0) {\n            modifySelectedCells(x - 1, y, extend);\n            return true;\n          }\n        }\n      }\n\n      if (!(0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isRangeSelection)(selection) || targetEditor !== cellEditor) {\n        return false;\n      }\n\n      if (selection.isCollapsed() && selection.anchor.offset === 0) {\n        event.preventDefault();\n        return true;\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_ARROW_RIGHT_COMMAND, function (event, targetEditor) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (!isEditing && selection === null) {\n        var extend = event.shiftKey;\n        var cellID = extend ? lastCellIDRef.current || primarySelectedCellID : primarySelectedCellID;\n\n        if (cellID !== null) {\n          var _ref21 = cellCoordMap.get(cellID),\n              _ref22 = (0,_home_songliansheng_projects_blog_ui_node_modules_next_dist_compiled_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_ref21, 2),\n              x = _ref22[0],\n              y = _ref22[1];\n\n          if (x !== rows[y].cells.length - 1) {\n            modifySelectedCells(x + 1, y, extend);\n            return true;\n          }\n        }\n      }\n\n      if (!(0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isRangeSelection)(selection) || targetEditor !== cellEditor) {\n        return false;\n      }\n\n      if (selection.isCollapsed()) {\n        var anchor = selection.anchor;\n\n        if (anchor.type === 'text' && anchor.offset === anchor.getNode().getTextContentSize() || anchor.type === 'element' && anchor.offset === anchor.getNode().getChildrenSize()) {\n          event.preventDefault();\n          return true;\n        }\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical__WEBPACK_IMPORTED_MODULE_11__.KEY_ESCAPE_COMMAND, function (event, targetEditor) {\n      var selection = (0,lexical__WEBPACK_IMPORTED_MODULE_11__.$getSelection)();\n\n      if (!isEditing && selection === null && targetEditor === editor) {\n        setSelected(true);\n        setPrimarySelectedCellID(null);\n        selectTable();\n        return true;\n      }\n\n      if (!(0,lexical__WEBPACK_IMPORTED_MODULE_11__.$isRangeSelection)(selection)) {\n        return false;\n      }\n\n      if (isEditing) {\n        saveEditorToJSON();\n        setIsEditing(false);\n\n        if (primarySelectedCellID !== null) {\n          setTimeout(function () {\n            focusCell(tableElem, primarySelectedCellID);\n          }, 20);\n        }\n\n        return true;\n      }\n\n      return false;\n    }, lexical__WEBPACK_IMPORTED_MODULE_11__.COMMAND_PRIORITY_LOW));\n  }, [cellCoordMap, cellEditor, clearCellsCommand, clearSelection, editor, isEditing, modifySelectedCells, nodeKey, primarySelectedCellID, rows, saveEditorToJSON, selectTable, selectedCellIDs, setSelected, updateTableNode]);\n\n  if (cellEditor === null) {\n    return;\n  }\n\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsxs)(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"table\", {\n      className: \"\".concat(theme.table, \" \").concat(isSelected ? theme.tableSelected : ''),\n      ref: tableRef,\n      tabIndex: -1,\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"tbody\", {\n        children: rows.map(function (row) {\n          return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"tr\", {\n            className: theme.tableRow,\n            children: row.cells.map(function (cell) {\n              var id = cell.id;\n              return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(TableCell, {\n                cell: cell,\n                theme: theme,\n                isSelected: selectedCellSet.has(id),\n                isPrimarySelected: primarySelectedCellID === id,\n                isEditing: isEditing,\n                sortingOptions: sortingOptions,\n                cellEditor: cellEditor,\n                updateCellsByID: updateCellsByID,\n                updateTableNode: updateTableNode,\n                cellCoordMap: cellCoordMap,\n                rows: rows,\n                setSortingOptions: setSortingOptions\n              }, id);\n            })\n          }, row.id);\n        })\n      })\n    }), showAddColumns && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n      className: theme.tableAddColumns,\n      onClick: addColumns\n    }), showAddRows && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"button\", {\n      className: theme.tableAddRows,\n      onClick: addRows,\n      ref: addRowsRef\n    }), resizingID !== null && /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_17__.jsx)(\"div\", {\n      className: theme.tableResizeRuler,\n      ref: tableResizerRulerRef\n    })]\n  });\n}\n\n_s4(TableComponent, \"4/yaxSaos8Hl3yymYRO83K2BCwM=\", false, function () {\n  return [_lexical_react_useLexicalNodeSelection__WEBPACK_IMPORTED_MODULE_9__.useLexicalNodeSelection, _lexical_react_LexicalComposerContext__WEBPACK_IMPORTED_MODULE_7__.useLexicalComposerContext];\n});\n\n_c4 = TableComponent;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TableCellEditor\");\n$RefreshReg$(_c2, \"TableActionMenu\");\n$RefreshReg$(_c3, \"TableCell\");\n$RefreshReg$(_c4, \"TableComponent\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/LexicalEditor/nodes/TableComponent.tsx\n"));

/***/ })

}]);